// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id Int     @id @default(autoincrement())
  email   String  @unique
  name    String?

  tasks Task[] // Relasi ke Task
}

model Task {
  task_id     Int      @id @default(autoincrement())
  task_date   DateTime
  title       String
  description String?
  status_id   Int
  category_id Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  status   Status   @relation(fields: [status_id], references: [status_id], onDelete: Cascade)
  category Category @relation(fields: [category_id], references: [category_id], onDelete: Cascade)
  user     User?    @relation(fields: [user_id], references: [user_id], onDelete: SetNull)

  user_id Int? // Menambahkan user_id sebagai foreign key ke User
}

model Status {
  status_id Int    @id @default(autoincrement())
  name      String @unique
  tasks     Task[] // Relasi ke Task
}

model Category {
  category_id Int    @id @default(autoincrement())
  name        String @unique
  tasks       Task[] // Relasi ke Task
}
